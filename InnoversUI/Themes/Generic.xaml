<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:InnoversUI.Controls" 
    xmlns:converters="clr-namespace:InnoversUI.Converters">
    
    <!--<Style TargetType="{x:Type local:CustomControl1}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomControl1}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->


    <!--#region CIRCLEPROGRESSBAR -->
    <Style TargetType="{x:Type local:CircleProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CircleProgressBar}">
                    <!--TEMPLATE RESOURCE-->
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                        <converters:StrokeDashArrayConverter x:Key="StrokeDashArrayConverter" />
                    </ControlTemplate.Resources>

                    <!--TEMPLATE CONTAINER-->
                    <Ellipse
                        Width="{TemplateBinding Size}"
                        Height="{TemplateBinding Size}"
                        Stroke="{TemplateBinding ProgressColor}"
                        StrokeThickness="{TemplateBinding Thickness}"
                        StrokeDashCap="{TemplateBinding LineCape}"
                        Visibility="{TemplateBinding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"
                        RenderTransformOrigin="0.5 0.5"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">

                        <Ellipse.StrokeDashArray>
                            <MultiBinding Converter="{StaticResource StrokeDashArrayConverter}">
                                <Binding Path="Size" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="Thickness" RelativeSource="{RelativeSource TemplatedParent}"/>
                            </MultiBinding>
                        </Ellipse.StrokeDashArray>

                        <Ellipse.RenderTransform >
                            <RotateTransform x:Name="Rotation" Angle="0"/>
                        </Ellipse.RenderTransform>

                        <Ellipse.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation From="0" To="360" Storyboard.TargetName="Rotation" Storyboard.TargetProperty="Angle"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Ellipse.Triggers>
                    </Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion CIRCLEPROGRESSBAR-->


    <!--#region TEXTFIELD -->
    <Style TargetType="{x:Type local:TextField}" >
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="180"/>
        <Setter Property="Padding" Value="3"/>


        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TextField}">

                    <ControlTemplate.Resources>
                        <SolidColorBrush x:Key="MouseOverColor">Cyan</SolidColorBrush>

                        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                    </ControlTemplate.Resources>

                    <Border x:Name="Border" Focusable="False" CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Padding="{TemplateBinding Padding}" MinWidth="{TemplateBinding MinHeight}" MaxWidth="{TemplateBinding MaxWidth}" MinHeight="{TemplateBinding MinHeight}" MaxHeight="{TemplateBinding MaxHeight}">
                        <Grid>
                            <TextBlock  HorizontalAlignment="{TemplateBinding HintTextHorizontalAlignment}" VerticalAlignment="{TemplateBinding HintTextVerticalAlignment}" Foreground="{TemplateBinding HintTextColor}" FontFamily="{TemplateBinding FontFamily}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" Margin="3 0" Padding="{TemplateBinding HintTextPadding}" Text="{TemplateBinding HintText}" Visibility="{TemplateBinding IsEmpty,Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="{TemplateBinding VerticalAlignment}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" Cursor="IBeam"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Border.BorderBrush" Value="{StaticResource MouseOverColor}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Border" Property="Border.BorderBrush" Value="{StaticResource MouseOverColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion TEXTFIELD-->


    <!--#region ICON TEXTFIELD -->
    <Style TargetType="{x:Type local:IconTextField}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:IconTextField}">

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ICON TEXTFIELD-->


    <!--#region BUTTON -->
    <Style TargetType="{x:Type local:InnoButton}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Blue"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Content" Value="Button"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:InnoButton}">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding CornerRadius}"
                        Height="{TemplateBinding Height}"
                        Width="{TemplateBinding Width}"
                        VerticalAlignment="Center">
                        <Border Padding="3">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard Storyboard.TargetName="Border">
                                    <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(Brush.Opacity)" From="1" To="0.6" Duration="0:0:0.3" FillBehavior="HoldEnd"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard Storyboard.TargetName="Border">
                                    <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(Brush.Opacity)" From="0.6" To="1" Duration="0:0:0.3" FillBehavior="HoldEnd"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion BUTTON-->


    <!--#region CIRCLEBUTTON -->
    <Style TargetType="{x:Type local:CircleButton}">

        <Setter Property="Cursor" Value="Hand"/>
        <!--<Setter Property="Background" Value="WhiteSmoke"/>-->
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Content" Value="CircleButton" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CircleButton}">
                    <ControlTemplate.Resources>
                        <converters:DoubleToCornerRadius x:Key="DoubleToCornerRadius"/>
                    </ControlTemplate.Resources>

                    <Grid>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="3" Width="{TemplateBinding Size}" Height="{TemplateBinding Size}" CornerRadius="{TemplateBinding Size, Converter={StaticResource DoubleToCornerRadius}}" Background="{TemplateBinding Background}"/>
                        <ContentControl x:Name="Content"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                        
                        <Border x:Name="Splash" Visibility="Collapsed" Background="LightGray" Opacity="0.4" Width="{TemplateBinding Size}" Height="{TemplateBinding Size}" CornerRadius="{TemplateBinding Size, Converter={StaticResource DoubleToCornerRadius}}"/>

                    </Grid>
                   
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="Splash"/>
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SplashColor}" TargetName="Splash"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="Splash"/>
                            <Setter Property="Opacity" Value="0.8" TargetName="Splash"/>
                        </Trigger>
                        <!--<EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background" To="Violet"  FillBehavior="HoldEnd" Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion CIRCLEBUTTON-->

    <!--#region CIRCLEIMAGE -->
    <Style TargetType="{x:Type local:CircleImage}">
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Template">
            
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CircleImage}">

                    <ControlTemplate.Resources>
                        <converters:DoubleToCornerRadius x:Key="DoubleToCornerRadius"/>
                        <ImageBrush ImageSource="{TemplateBinding ImageSource}" x:Key="IS"/>
                    </ControlTemplate.Resources>

                    <Grid>
                        <Border x:Name="Border" Padding="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Width="{TemplateBinding Size}" Height="{TemplateBinding Size}" CornerRadius="{TemplateBinding Size, Converter={StaticResource DoubleToCornerRadius}}">
                            <Border.Background>
                                <ImageBrush Stretch="{TemplateBinding Stretch}" ImageSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageSource}" />
                            </Border.Background>
                        </Border>
                       
                    </Grid>

                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion CIRCLEIMAGE-->

    <!--#region INNOCOMBOBOX -->
    <Style TargetType="{x:Type local:InnoComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:InnoComboBox}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion INNOCOMBOBOX-->

    <!--#region FAVORITECHECKBOX -->
    <Style TargetType="{x:Type local:FavoriteCheckBox}">
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FavoriteCheckBox}">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Width="{TemplateBinding Size}" Height="{TemplateBinding Size}" CornerRadius="{TemplateBinding Size, Converter={StaticResource DoubleToCornerRadius}}">

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="Aqua"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion FAVORITECHECKBOX-->

</ResourceDictionary>
