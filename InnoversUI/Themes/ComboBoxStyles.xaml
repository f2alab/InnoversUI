<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <system:Double x:Key="TrierParDateComboBoxWidth">175</system:Double>
    <system:Double x:Key="ComboBoxFontSize">11</system:Double>
    <system:Double x:Key="ComboxHeight" >35</system:Double>
    <SolidColorBrush x:Key="ComboBoxDefaultBorderColor" Color="Teal"/>
    <SolidColorBrush x:Key="ComboBoxMouseOverBorderColor" Color="Teal"/>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"  Background="{TemplateBinding Background}" VerticalAlignment="Center"  BorderThickness="0" MaxWidth="{TemplateBinding MinWidth}" MinWidth="{TemplateBinding MaxWidth}"/>
    </ControlTemplate>

    <Style  TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontSize" Value="{DynamicResource ComboBoxFontSize}"/>
        <Setter Property="FontFamily" Value="Outfit"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="Background" Value="Azure" />
        <Setter Property="Foreground" Value="{DynamicResource MenuBackColor}"/>
        <Setter Property="MinHeight" Value="{DynamicResource DefaultFieldHeight}"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Border x:Name="Border" BorderThickness="2" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="{DynamicResource DefaultBorderRadius}" Background="{TemplateBinding Background}" Width="{TemplateBinding Width}" MaxWidth="{TemplateBinding MaxWidth}" MinWidth="{TemplateBinding MinWidth}" Height="{TemplateBinding Height}" MinHeight="{TemplateBinding MinHeight}" MaxHeight="{TemplateBinding MaxHeight}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                                    ContentTemplate="{TemplateBinding ItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    Margin="11 0 25 0"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left" 
                                    IsEnabled="True"/> 
                                <Label 
                                    x:Name="WaterMark"
                                    Style="{x:Null}"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    Visibility="Hidden"
                                    Foreground="Gray"
                                    Background="Transparent"
                                    Padding="8 0 0 0"
                                    Content="{TemplateBinding Tag}"
                                    FontFamily="Outfit"
                                    FontSize="{TemplateBinding FontSize}"/> 
                                <TextBox 
                                    x:Name="PART_EditableTextBox"
                                    Style="{x:Null}" 
                                    Template="{StaticResource ComboBoxTextBox}" 
                                    HorizontalAlignment="Left" 
                                    VerticalAlignment="Center" 
                                    Focusable="True"
                                    Background="Transparent"
                                    Margin="5 0"
                                    IsInactiveSelectionHighlightEnabled="False"
                                    FontFamily="{TemplateBinding FontFamily}"
                                    FontSize="{TemplateBinding FontSize}"
                                    FontWeight="{TemplateBinding FontWeight}"
                                    MaxWidth="{TemplateBinding Width}"
                                    Visibility="Hidden"
                                    IsReadOnly="{TemplateBinding IsReadOnly}" />  
                                    <!--SelectionBrush="Transparent"/>-->  

                                <Popup 
                                    x:Name="Popup"
                                    Placement="Bottom"
                                    PlacementTarget="{Binding ElementName=Border}"
                                    IsOpen="{TemplateBinding IsDropDownOpen}"
                                    AllowsTransparency="True" 
                                    Focusable="False"
                                    PopupAnimation="Slide"> 
                                    
                                    <!--Background="#FFDED9E2"-->
                                    <Border
                                        x:Name="DropDownBorder"
                                        Background="#FFDED9E2"
                                        CornerRadius="8"
                                        BorderThickness="1"
                                        BorderBrush="RosyBrown"
                                        Padding="5"
                                        Margin="10"
                                        MinWidth="{TemplateBinding ActualWidth}"
                                        MaxWidth="{TemplateBinding ActualWidth}"
                                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                        UseLayoutRounding="True"> 
                                        <Grid Name="DropDown"
                                            SnapsToDevicePixels="True"                
                                            MinWidth="{TemplateBinding ActualWidth}"
                                            MaxHeight="{TemplateBinding MaxDropDownHeight}" > 

                                            <ScrollViewer HorizontalAlignment="Center"  SnapsToDevicePixels="True" FontWeight="DemiBold" FontFamily="Outfit" FontSize="11" Cursor="Hand">

                                            </ScrollViewer>
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Margin="3"/>
                                        </Grid>
                                    </Border>


                                </Popup>
                            </Grid>

                            <ToggleButton 
                                x:Name="ToggleButton"
                                Grid.Column="1" 
                                Background="Teal"
                                Focusable="False"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                                <ToggleButton.Style>
                                    <Style TargetType="ToggleButton">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Grid>
                                                        <Border
                                                            x:Name="Border"
                                                            Width="23"
                                                            Grid.Column="0"
                                                            CornerRadius="0 3 3 0"
                                                            Background="{TemplateBinding Background}"
                                                            BorderBrush="{TemplateBinding Background}" 
                                                            SnapsToDevicePixels="False"/>

                                                        <Path 
                                                            x:Name="Arrow"
                                                            Grid.Column="0"     
                                                            Fill="White"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"/>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" TargetName="WaterMark"/>
                        </MultiTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="DeepSkyBlue"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True" SourceName="PART_EditableTextBox">
                            <Setter Property="BorderBrush" TargetName="Border" Value="DeepSkyBlue"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="25"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Silver"/>
                            <Setter Property="Background" Value="Silver" TargetName="ToggleButton"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="5"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="MouseDown" SourceName="PART_EditableTextBox">
                            <BeginStoryboard>
                                <Storyboard>
                                    <BooleanAnimationUsingKeyFrames
                                            Storyboard.TargetName="Popup" 
                                            Storyboard.TargetProperty="IsOpen"
                                            Duration="0:0:1" FillBehavior="HoldEnd">
                                        <DiscreteBooleanKeyFrame Value="False" KeyTime="0:0:0" />
                                        <DiscreteBooleanKeyFrame Value="True" KeyTime="0:0:1" />
                                    </BooleanAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
    
    <!--<Style x:Key="{x:Type ComboBoxItem}"
       TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        --><!--<Setter Property="OverridesDefaultStyle" Value="true" />--><!--
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">

                    <Border x:Name="ItemBorder"
                            Padding="5 3"
                            SnapsToDevicePixels="true"
                            Background="Transparent"
                            CornerRadius="5">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Teal" TargetName="ItemBorder"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightGray" TargetName="ItemBorder" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->


</ResourceDictionary>