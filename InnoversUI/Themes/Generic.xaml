<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:InnoversUI" xmlns:converters="clr-namespace:InnoversUI.Converters">
    <Style TargetType="{x:Type local:CustomControl1}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomControl1}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--CIRCLE PROGRESS-->
    <Style TargetType="{x:Type local:CircleProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CircleProgressBar}">
                    <!--TEMPLATE RESOURCE-->
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                        <converters:StrokeDashArrayConverter x:Key="StrokeDashArrayConverter" />
                    </ControlTemplate.Resources>
                    
                    <!--TEMPLATE CONTAINER-->
                    <Ellipse
                        Width="{TemplateBinding Size}"
                        Height="{TemplateBinding Size}"
                        Stroke="{TemplateBinding ProgressColor}"
                        StrokeThickness="{TemplateBinding Thickness}"
                        StrokeDashCap="{TemplateBinding LineCape}"
                        Visibility="{TemplateBinding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"
                        RenderTransformOrigin="0.5 0.5">

                        <Ellipse.StrokeDashArray>
                            <MultiBinding Converter="{StaticResource StrokeDashArrayConverter}">
                                <Binding Path="Size" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="Thickness" RelativeSource="{RelativeSource TemplatedParent}"/>
                            </MultiBinding>
                        </Ellipse.StrokeDashArray>

                        <Ellipse.RenderTransform >
                            <RotateTransform x:Name="Rotation" Angle="0"/>
                        </Ellipse.RenderTransform>
                        
                        <Ellipse.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation From="0" To="360" Storyboard.TargetName="Rotation" Storyboard.TargetProperty="Angle"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Ellipse.Triggers>
                    </Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--TEXTFIELD-->
    <Style TargetType="{x:Type local:TextField}" >
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="2"/>
        
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TextField}">

                    <ControlTemplate.Resources>
                        <SolidColorBrush x:Key="MouseOverColor">DarkCyan</SolidColorBrush>
                        
                        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                    </ControlTemplate.Resources>

                    <Border x:Name="Border" Focusable="False" CornerRadius="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Height="35" Padding="3" MinWidth="100" >
                        <Grid>
                            <TextBlock Foreground="Gray" VerticalAlignment="Center" FontWeight="DemiBold" FontSize="12" Margin="3 0" Padding="{TemplateBinding Padding}" Text="{TemplateBinding HintText}" Visibility="{TemplateBinding IsEmpty,Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" FontWeight="DemiBold" FontSize="{TemplateBinding FontSize}" Cursor="IBeam"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Border.BorderBrush" Value="{StaticResource MouseOverColor}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Border" Property="Border.BorderBrush" Value="{StaticResource MouseOverColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:IconTextField}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:IconTextField}">
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
