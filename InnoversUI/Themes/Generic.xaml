<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:InnoversUI.Controls" 
    xmlns:converters="clr-namespace:InnoversUI.Converters" xmlns:converters1="http://schemas.microsoft.com/netfx/2009/xaml/presentation">
    
    <!--<Style TargetType="{x:Type local:CustomControl1}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CustomControl1}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->


    <!--#region CIRCLEPROGRESSBAR -->
    <Style TargetType="{x:Type local:CircleProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CircleProgressBar}">
                    <!--TEMPLATE RESOURCE-->
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                        <converters:StrokeDashArrayConverter x:Key="StrokeDashArrayConverter" />
                    </ControlTemplate.Resources>

                    <!--TEMPLATE CONTAINER-->
                    <Ellipse
                        Width="{TemplateBinding Size}"
                        Height="{TemplateBinding Size}"
                        Stroke="{TemplateBinding ProgressColor}"
                        StrokeThickness="{TemplateBinding Thickness}"
                        StrokeDashCap="{TemplateBinding LineCape}"
                        Visibility="{TemplateBinding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"
                        RenderTransformOrigin="0.5 0.5"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">

                        <Ellipse.StrokeDashArray>
                            <MultiBinding Converter="{StaticResource StrokeDashArrayConverter}">
                                <Binding Path="Size" RelativeSource="{RelativeSource TemplatedParent}" />
                                <Binding Path="Thickness" RelativeSource="{RelativeSource TemplatedParent}"/>
                            </MultiBinding>
                        </Ellipse.StrokeDashArray>

                        <Ellipse.RenderTransform >
                            <RotateTransform x:Name="Rotation" Angle="0"/>
                        </Ellipse.RenderTransform>

                        <Ellipse.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard>
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimation From="0" To="360" Storyboard.TargetName="Rotation" Storyboard.TargetProperty="Angle"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Ellipse.Triggers>
                    </Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion CIRCLEPROGRESSBAR-->


    <!--#region TEXTFIELD -->
    <Style TargetType="{x:Type local:TextField}" >
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="FontFamily" Value="Outfit Medium"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TextField}">

                    <ControlTemplate.Resources>
                        <SolidColorBrush x:Key="MouseOverColor">Cyan</SolidColorBrush>
                        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                        <converters:NullToVisibility x:Key="NullToVisibility" />
                        <converters:CornerRadiusToLeftIconRadius x:Key="CornerRadiusToLeftIconRadius" />
                        <converters:CornerRadiusToRightIconRadius x:Key="CornerRadiusToRightIconRadius" />
                        <converters:PassBoxVisibilityToBoolean x:Key="PassBoxVisibilityToBoolean" />
                        <converters1:TemplateBindingExpressionConverter  x:Key="TemplateBindingExpressionConverter " />
                    </ControlTemplate.Resources>

                    <Border x:Name="Border" UseLayoutRounding="True" FocusVisualStyle="{TemplateBinding FocusVisualStyle}" Focusable="{TemplateBinding Focusable}" IsEnabled="{TemplateBinding IsEnabled}" CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" MinWidth="{TemplateBinding MinHeight}" MaxWidth="{TemplateBinding MaxWidth}" MinHeight="{TemplateBinding MinHeight}" MaxHeight="{TemplateBinding MaxHeight}">

                        <Grid Focusable="False" UseLayoutRounding="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" MinWidth="0"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto" MinWidth="0"/>
                            </Grid.ColumnDefinitions>
                            <!--LEFT ICON-->
                            <Border x:Name="LeftIconBorder" Grid.Column="0" MinWidth="0" UseLayoutRounding="True" Visibility="{TemplateBinding LeftIcon, Converter={StaticResource NullToVisibility}}" Cursor="Arrow" CornerRadius="{TemplateBinding CornerRadius, Converter= {StaticResource CornerRadiusToLeftIconRadius}}" IsEnabled="{TemplateBinding IsEnabled}" Background="{TemplateBinding LeftIconBackColor}" Padding="3" Focusable="False">
                                <ContentControl Content="{TemplateBinding LeftIcon}" Focusable="False"/>
                            </Border>
                            
                            <!--TEXTBOX-->
                            <Border x:Name="TexBoxBorder" Grid.Column="1" UseLayoutRounding="True" IsEnabled="{TemplateBinding IsEnabled}" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Padding="{TemplateBinding Padding}" Focusable="False" VerticalAlignment="Center">
                                <Grid Focusable="False">
                                    <TextBlock x:Name="HintText" Focusable="False" IsEnabled="{TemplateBinding IsEnabled}" HorizontalAlignment="{TemplateBinding HintTextHorizontalAlignment}" VerticalAlignment="{TemplateBinding HintTextVerticalAlignment}" Foreground="{TemplateBinding HintTextColor}" FontFamily="{TemplateBinding FontFamily}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" Margin="3 0" Padding="{TemplateBinding HintTextPadding}" Text="{TemplateBinding HintText}" Visibility="{TemplateBinding IsEmpty,Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    <PasswordBox x:Name="PassTextBox" PasswordChar="{TemplateBinding PasswordChar}"  Focusable="{TemplateBinding IsPassTextField}" Visibility="{TemplateBinding IsPassTextField, Converter={StaticResource BooleanToVisibilityConverter}}" Background="Transparent" BorderThickness="0" VerticalContentAlignment="Center" Foreground="{TemplateBinding Foreground}" FontFamily="{TemplateBinding FontFamily}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" Margin="3 0" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" Cursor="IBeam" IsEnabled="{TemplateBinding IsEnabled}"/>
                                    <ScrollViewer  x:Name="PART_ContentHost" Focusable="True" VerticalAlignment="{TemplateBinding VerticalAlignment}" Foreground="{TemplateBinding Foreground}" Visibility="{TemplateBinding IsPassTextField, Converter={StaticResource PassBoxVisibilityToBoolean}}" FontFamily="{TemplateBinding FontFamily}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" FontSize="{TemplateBinding FontSize}" Cursor="IBeam" IsEnabled="{TemplateBinding IsEnabled}"/>
                                </Grid>
                            </Border>

                            <!--RIGHT ICON-->
                            <Border x:Name="RightIconBorder" Grid.Column="2" MinWidth="0" UseLayoutRounding="True" Visibility="{TemplateBinding RightIcon, Converter={StaticResource NullToVisibility}}" Cursor="Arrow" CornerRadius="{TemplateBinding CornerRadius, Converter= {StaticResource CornerRadiusToRightIconRadius}}" IsEnabled="{TemplateBinding IsEnabled}" Background="{TemplateBinding RightIconBackColor}" Padding="3" Focusable="False">
                                
                                <Grid>
                                    <!--<ContentControl Content="{TemplateBinding RightIcon}" Focusable="False" Visibility="{TemplateBinding IsPassTextField, Converter={StaticResource PassBoxVisibilityToBoolean}}"/>-->
                                    <ContentControl Content="{TemplateBinding RightIcon}" Focusable="False" />
                                    
                                    <!--CHECKBOX HIDE SHOW PASSWORD-->
                                    <!--<CheckBox x:Name="HideShowPassCheckBox" Cursor="Hand">
                                        <CheckBox.Style>
                                            <Style TargetType="CheckBox">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="CheckBox">
                                                            <Border x:Name="Splash" CornerRadius="50" Background="Transparent" Height="25" Width="25">
                                                                <Viewbox>
                                                                    <Path x:Name="Icon" Data="M480-320q75 0 127.5-52.5T660-500q0-75-52.5-127.5T480-680q-75 0-127.5 52.5T300-500q0 75 52.5 127.5T480-320Zm0-72q-45 0-76.5-31.5T372-500q0-45 31.5-76.5T480-608q45 0 76.5 31.5T588-500q0 45-31.5 76.5T480-392Zm0 192q-146 0-266-81.5T40-500q54-137 174-218.5T480-800q146 0 266 81.5T920-500q-54 137-174 218.5T480-200Zm0-300Zm0 220q113 0 207.5-59.5T832-500q-50-101-144.5-160.5T480-720q-113 0-207.5 59.5T128-500q50 101 144.5 160.5T480-280Z"
                                                                          Height="50" Width="50" Fill="{TemplateBinding Foreground}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                                                </Viewbox>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter Property="Data" TargetName="Icon" Value="m644-428-58-58q9-47-27-88t-93-32l-58-58q17-8 34.5-12t37.5-4q75 0 127.5 52.5T660-500q0 20-4 37.5T644-428Zm128 126-58-56q38-29 67.5-63.5T832-500q-50-101-143.5-160.5T480-720q-29 0-57 4t-55 12l-62-62q41-17 84-25.5t90-8.5q151 0 269 83.5T920-500q-23 59-60.5 109.5T772-302Zm20 246L624-222q-35 11-70.5 16.5T480-200q-151 0-269-83.5T40-500q21-53 53-98.5t73-81.5L56-792l56-56 736 736-56 56ZM222-624q-29 26-53 57t-41 67q50 101 143.5 160.5T480-280q20 0 39-2.5t39-5.5l-36-38q-11 3-21 4.5t-21 1.5q-75 0-127.5-52.5T300-500q0-11 1.5-21t4.5-21l-84-82Zm319 93Zm-151 75Z"/>
                                                                </Trigger>
                                                                <Trigger Property="IsChecked" Value="False">
                                                                    <Setter Property="Data" TargetName="Icon" Value="M480-320q75 0 127.5-52.5T660-500q0-75-52.5-127.5T480-680q-75 0-127.5 52.5T300-500q0 75 52.5 127.5T480-320Zm0-72q-45 0-76.5-31.5T372-500q0-45 31.5-76.5T480-608q45 0 76.5 31.5T588-500q0 45-31.5 76.5T480-392Zm0 192q-146 0-266-81.5T40-500q54-137 174-218.5T480-800q146 0 266 81.5T920-500q-54 137-174 218.5T480-200Zm0-300Zm0 220q113 0 207.5-59.5T832-500q-50-101-144.5-160.5T480-720q-113 0-207.5 59.5T128-500q50 101 144.5 160.5T480-280Z"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background" Value="LightGray" TargetName="Splash"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </CheckBox.Style>
                                    </CheckBox>
                                    <ContentControl Content="{TemplateBinding RightIcon}" Focusable="False" />-->
                                </Grid>
                            </Border>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Border.BorderBrush" Value="{StaticResource MouseOverColor}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Border" Property="Border.BorderBrush" Value="{StaticResource MouseOverColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="BorderBrush" Value="Silver"/>
                            <Setter TargetName="LeftIconBorder" Property="Background" Value="Silver"/>
                            <Setter TargetName="RightIconBorder" Property="Background" Value="Silver"/>
                            <Setter TargetName="HintText" Property="Foreground" Value="Silver"/>
                            <Setter Property="Foreground" Value="Silver"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion TEXTFIELD-->

   
    <!--#region BUTTON -->
    <DropShadowEffect x:Key="MouseOverBtnShadow" BlurRadius="5" ShadowDepth="1.5" Opacity="0.5"/>
    <DropShadowEffect x:Key="PressBtnShadow" BlurRadius="5" ShadowDepth="3"/>
    

    <Style TargetType="{x:Type local:InnoButton}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Blue"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="DemiBold"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Content" Value="Button"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:InnoButton}">

                    <ControlTemplate.Resources>
                        <converters:BackColorToSplashColor x:Key="BackColorToSplashColor"/>
                        <SolidColorBrush x:Key="SplashColor" Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" Opacity="0.5"/>
                    </ControlTemplate.Resources>

                    <Grid>
                        <Border
                            x:Name="BtnContainer"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            UseLayoutRounding="True"
                            Padding="{TemplateBinding Padding}">
                            <ContentPresenter  HorizontalAlignment="Center" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}"/>
                            
                        </Border>
                        <Border
                            x:Name="Splash"
                            Background="{StaticResource SplashColor}"
                            Opacity="0.2"
                            Visibility="Collapsed"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"
                            VerticalAlignment="Center"
                            UseLayoutRounding="True"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="Gray" TargetName="BtnContainer"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="Splash"/>
                            <Setter Property="Effect" Value="{StaticResource MouseOverBtnShadow}" TargetName="BtnContainer" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Splash"/>
                            <Setter Property="Effect" Value="{StaticResource PressBtnShadow}" TargetName="BtnContainer" />
                        </Trigger>
                        <!--<EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard Storyboard.TargetName="Border">
                                    <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(Brush.Opacity)" From="1" To="0.6" Duration="0:0:0.3" FillBehavior="HoldEnd"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard Storyboard.TargetName="Border">
                                    <DoubleAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(Brush.Opacity)" From="0.6" To="1" Duration="0:0:0.3" FillBehavior="HoldEnd"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion BUTTON-->


    <!--#region CIRCLEBUTTON -->
    <Style TargetType="{x:Type local:CircleButton}">

        <Setter Property="Cursor" Value="Hand"/>
        <!--<Setter Property="Background" Value="WhiteSmoke"/>-->
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Content" Value="CircleButton" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CircleButton}">
                    <ControlTemplate.Resources>
                        <converters:DoubleToCornerRadius x:Key="DoubleToCornerRadius"/>
                    </ControlTemplate.Resources>

                    <Grid>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Padding="3" Width="{TemplateBinding Size}" Height="{TemplateBinding Size}" CornerRadius="{TemplateBinding Size, Converter={StaticResource DoubleToCornerRadius}}" Background="{TemplateBinding Background}"/>
                        <ContentControl x:Name="Content"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" Content="{TemplateBinding Content}"/>
                        
                        <Border x:Name="Splash" Visibility="Collapsed" Background="LightGray" Opacity="0.4" Width="{TemplateBinding Size}" Height="{TemplateBinding Size}" CornerRadius="{TemplateBinding Size, Converter={StaticResource DoubleToCornerRadius}}"/>

                    </Grid>
                   
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="Splash"/>
                            <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SplashColor}" TargetName="Splash"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="Splash"/>
                            <Setter Property="Opacity" Value="0.8" TargetName="Splash"/>
                        </Trigger>
                        <!--<EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="Background" To="Violet"  FillBehavior="HoldEnd" Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion CIRCLEBUTTON-->


    <!--#region CIRCLEIMAGE -->
    <Style TargetType="{x:Type local:CircleImage}">
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CircleImage}">

                    <ControlTemplate.Resources>
                        <converters:DoubleToCornerRadius x:Key="DoubleToCornerRadius"/>
                        <ImageBrush ImageSource="{TemplateBinding ImageSource}" x:Key="IS"/>
                    </ControlTemplate.Resources>

                    <Grid>
                        <Border x:Name="Border" Padding="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Width="{TemplateBinding Size}" Height="{TemplateBinding Size}" CornerRadius="{TemplateBinding Size, Converter={StaticResource DoubleToCornerRadius}}">
                            <Border.Background>
                                <ImageBrush Stretch="{TemplateBinding Stretch}" ImageSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageSource}" />
                            </Border.Background>
                        </Border>

                    </Grid>


                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion CIRCLEIMAGE-->

    <!--#region CIRCLEIMAGE -->
    <Style TargetType="{x:Type local:CircleImageButton}">
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Cursor" Value="Hand"/>
       
        <Setter Property="Template">

            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:CircleImageButton}">

                    <ControlTemplate.Resources>
                        <converters:DoubleToCornerRadius x:Key="DoubleToCornerRadius"/>
                        <converters:ControlSizeToSplashSize x:Key="ControlSizeToSplashSize"/>
                    </ControlTemplate.Resources>

                    <Grid>
                        <Border x:Name="Border" ToolTip="{TemplateBinding ToolTip}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Cursor="{TemplateBinding Cursor}" Width="{TemplateBinding Size}" Height="{TemplateBinding Size}" CornerRadius="{TemplateBinding Size, Converter={StaticResource DoubleToCornerRadius}}">
                            <Border.Background>
                                <ImageBrush Stretch="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Stretch}" ImageSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageSource}">
                                </ImageBrush>
                            </Border.Background>
                        </Border>

                        <Border x:Name="Splash" ToolTip="{TemplateBinding ToolTip}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SplashColor}" Opacity="0.4" Visibility="Hidden" Width="{TemplateBinding Size, Converter={StaticResource ControlSizeToSplashSize}}" Height="{TemplateBinding Size, Converter={StaticResource ControlSizeToSplashSize}}" CornerRadius="{TemplateBinding Size, Converter={StaticResource DoubleToCornerRadius}}">

                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="Splash"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="Splash"/>
                            <Setter Property="Opacity" Value="0.7" TargetName="Splash"/>
                        </Trigger>
                    </ControlTemplate.Triggers>


                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion CIRCLEIMAGE-->

    <!--#region INNOCOMBOBOX -->
    <Style TargetType="{x:Type local:InnoComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:InnoComboBox}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion INNOCOMBOBOX-->

    <!--#region FAVORITECHECKBOX -->
    <Style TargetType="{x:Type local:FavoriteCheckBox}">
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FavoriteCheckBox}">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Width="{TemplateBinding Size}" Height="{TemplateBinding Size}" CornerRadius="{TemplateBinding Size, Converter={StaticResource DoubleToCornerRadius}}">

                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" Value="Aqua"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion FAVORITECHECKBOX-->

</ResourceDictionary>
